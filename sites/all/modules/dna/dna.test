<?php

class DNATest extends DrupalUnitTestCase{
    public static function getInfo() {
        return array(
            'name' => 'DNA Module unit tests',
            'description' => 'Test DNA matching function',
            'group' => 'My Tests',
        );
    }

    public function testDNAMatch() {
        $description = 'Test that A matches T';
        $input = 'A';
        $expected_output = 'T';
        $result = get_pair($input);
        $this->assertEqual($result, $expected_output, $description);

        $description = 'Test that T matches A';
        $input = 'T';
        $expected_output = 'A';
        $result = get_pair($input);
        $this->assertEqual($result, $expected_output, $description);

        $description = 'Test that C matches G';
        $input = 'C';
        $expected_output = 'G';
        $result = get_pair($input);
        $this->assertEqual($result, $expected_output, $description);

        $description = 'Test that G matches C';
        $input = 'G';
        $expected_output = 'C';
        $result = get_pair($input);
        $this->assertEqual($result, $expected_output, $description);

        $description = 'Test multi-matching';
        $input = 'ATCGAATTCCGG';
        $expected_output = 'TAGCTTAAGGCC';
        $result = match_dna($input);
        $this->assertEqual($result, $expected_output, $description);
    }

}

class DNAInterfaceTest extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
            'name' => 'DNA Module functional Tests',
            'description' => 'Tests Form Validation on DNA Module',
            'group' => 'My Tests',
        );
    }

    public function setUp() {
        parent::setUp(array('dna'));
    }

    public function testNonDnaLetter() {
        $info = array();
        $info['input_dna'] = 'Q';
        $this->drupalPost('dna', $info, t('Get Pair'));
        $this->assertText(t('Invalid input'), 'Invalid letter input handled correctly');
    }

    public function testSpaceInDNA() {
        $info = array();
        $info['input_dna'] = 'AT CG';
        $this->drupalPost('dna', $info, t('Get Pair'));
        $this->assertText(t('Invalid input'), 'Spaces in input handled correctly');
    }

    public function testValidInput() {
        $info = array();
        $info['input_dna'] = 'ATCG';
        $this->drupalPost('dna', $info, t('Get Pair'));
        $this->assertText('ATCG', 'Diplays input string');
        $this->assertText('TAGC', 'Display correct output string');
    }
}
